<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>hss</groupId>
  <artifactId>sihouzi</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>

  <name>appbricks dubbox service</name>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.3.5.RELEASE</version>
  </parent>

  <dependencies>
    <!-- dubbox starter of spring boot（include web-dev starter with embedded tomcat and mvc） -->
    <dependency>
      <groupId>com.foreveross</groupId>
      <artifactId>spring-boot-starter-dubbox</artifactId>
      <version>2.3.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
      <!--<scope>provided</scope>-->
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>
    <!-- starter for using Spring Data JPA with Hibernate -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>


    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>3.15</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-scratchpad</artifactId>
      <version>3.15</version>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.9.3</version>
    </dependency>


    <!-- starter for testing Spring Boot applications with libraries including JUnit, Hamcrest and Mockito -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- jdbc for database -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>6.0.2</version>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
      <version>1.4.191</version>
    </dependency>

    <!-- dubbox -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>dubbo</artifactId>
      <version>2.8.4</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- dubbox rest 协议依赖包 resteasy -->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>3.0.7.Final</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-netty</artifactId>
      <version>3.0.7.Final</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <version>3.0.7.Final</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.1.0.Final</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>5.2.4.Final</version>
    </dependency>
    <!-- 如果resteasy传递要使用json序列化 -->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson-provider</artifactId>
      <version>3.0.15.Final</version>
    </dependency>
    <!-- 如果resteasy传递要使用xml序列化 -->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxb-provider</artifactId>
      <version>3.0.16.Final</version>
    </dependency>
    <dependency>
      <groupId>com.aliyun.oss</groupId>
      <artifactId>aliyun-sdk-oss</artifactId>
      <version>2.4.0</version>
    </dependency>
    <!-- 如果要内嵌使用netty server -->
    <!--<dependency>-->
    <!--<groupId>org.jboss.resteasy</groupId>-->
    <!--<artifactId>resteasy-netty</artifactId>-->
    <!--<version>3.0.7.Final</version>-->
    <!--</dependency>-->
    <!--&lt;!&ndash; 如果要内嵌使用Sun HTTP server &ndash;&gt;-->
    <!--<dependency>-->
    <!--<groupId>org.jboss.resteasy</groupId>-->
    <!--<artifactId>resteasy-jdk-http</artifactId>-->
    <!--<version>3.0.7.Final</version>-->
    <!--</dependency>-->
    <!--&lt;!&ndash; 如果要内嵌使用tomcat server &ndash;&gt;-->
    <!--<dependency>-->
    <!--<groupId>org.apache.tomcat.embed</groupId>-->
    <!--<artifactId>tomcat-embed-core</artifactId>-->
    <!--<version>8.0.11</version>-->
    <!--</dependency>-->
    <!--<dependency>-->
    <!--<groupId>org.apache.tomcat.embed</groupId>-->
    <!--<artifactId>tomcat-embed-logging-juli</artifactId>-->
    <!--<version>8.0.11</version>-->
    <!--</dependency>-->

    <!-- RPC传递Kyro序列化（java语言专用）-->
    <dependency>
      <groupId>com.esotericsoftware.kryo</groupId>
      <artifactId>kryo</artifactId>
      <version>2.24.0</version>
    </dependency>
    <dependency>
      <groupId>de.javakaffee</groupId>
      <artifactId>kryo-serializers</artifactId>
      <version>0.26</version>
    </dependency>
    <!-- RPC传递Jackson序列化 -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.1.39</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- spring test 打包胖jar 插件 -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!-- http://maven.apache.org/plugins/maven-jar-plugin/examples/attached-jar.html -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classifier>client</classifier>
              <includes>
                <include>**/domain/**</include>
                <include>**/service/*</include>
                <include>**/service/*/api/*</include>
                <include>**/service/extension/*</include>
                <include>**/service/optimizers/*</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>appbricks-nexus</id>
      <name>Appbricks Nexus</name>
      <url>http://nexus.appbricks.io:8081/repository/maven-public/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>nexus</id>
      <name>nexus</name>
      <url>http://nexus.appbricks.io:8081/repository/maven-public/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>
    <repository>
      <id>appbricks-release</id>
      <name>User Project Release</name>
      <url>http://nexus.appbricks.io:8081/repository/maven-releases/</url>
    </repository>
    <snapshotRepository>
      <id>appbricks-snapshots</id>
      <name>User Project SNAPSHOTS</name>
      <url>http://nexus.appbricks.io:8081/repository/maven-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>
</project>
